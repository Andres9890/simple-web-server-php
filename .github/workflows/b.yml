name: Build & Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to build & release (e.g. v1.2.3). Leave empty to skip release."
        required: false
        default: ""

env:
  NODE_VERSION: "20"
  ARTIFACT_PREFIX: simple-web-server

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set TAG env (manual dispatch)
        if: github.event_name == 'workflow_dispatch' && inputs.tag != ''
        run: echo "GITHUB_REF_NAME=${{ inputs.tag }}" >> $GITHUB_ENV

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install system deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          # Common electron-builder/electron-forge deps; adjust/remove if you don't need them
          sudo apt-get install -y rpm fakeroot dpkg icnsutils graphicsmagick xz-utils

      - name: Install system deps (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install rpm || true

      - name: Install system deps (Windows)
        if: runner.os == 'Windows'
        run: choco install -y zip

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build/Package
        run: npm run make

      - name: Collect artifacts
        id: collect
        run: |
          mkdir -p dist
          # electron-forge puts finished artifacts in out/make by default
          if [ -d "out/make" ]; then
            cp -r out/make/* dist/
          elif [ -d "dist" ]; then
            # electron-builder default
            mv dist dist_tmp && mv dist_tmp dist
          else
            echo "No known output folder found!" && exit 1
          fi
          echo "files=$(ls -1 dist | wc -l)" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PREFIX }}-${{ github.ref_name }}-${{ runner.os }}
          path: dist/**

  release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: >
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      (github.event_name == 'workflow_dispatch' && inputs.tag != '')
    steps:
      - name: Determine tag
        id: tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ inputs.tag }}" ]; then
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_files

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          files: release_files/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
